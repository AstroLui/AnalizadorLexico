Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMA
    CORCHETE_DER
    CORCHETE_IZQ
    DECIMALSTRING
    DIFERENTE
    DOSPUNTOS
    IGUAL
    INTERROGACION
    LLAVE_DER
    LLAVE_IZQ
    MAYOR
    MAYOR_IGUAL
    MENOR
    MENOR_IGUAL
    MODULO
    NOT
    PALABRA_RESERVADA
    PUNTO
    PUNTOCOMA

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression SUMA expression
Rule 2     expression -> expression RESTA expression
Rule 3     expression -> expression MULT expression
Rule 4     expression -> expression DIV expression
Rule 5     expression -> NUMERO
Rule 6     expression -> PARENT_IZQ expression PARENT_DER
Rule 7     expression -> ID ASIGNAR expression
Rule 8     expression -> expression AND expression
Rule 9     expression -> expression OR expression

Terminals, with rules where they appear

AND                  : 8
ASIGNAR              : 7
COMA                 : 
CORCHETE_DER         : 
CORCHETE_IZQ         : 
DECIMALSTRING        : 
DIFERENTE            : 
DIV                  : 4
DOSPUNTOS            : 
ID                   : 7
IGUAL                : 
INTERROGACION        : 
LLAVE_DER            : 
LLAVE_IZQ            : 
MAYOR                : 
MAYOR_IGUAL          : 
MENOR                : 
MENOR_IGUAL          : 
MODULO               : 
MULT                 : 3
NOT                  : 
NUMERO               : 5
OR                   : 9
PALABRA_RESERVADA    : 
PARENT_DER           : 6
PARENT_IZQ           : 6
PUNTO                : 
PUNTOCOMA            : 
RESTA                : 2
SUMA                 : 1
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 3 3 4 4 6 7 8 8 9 9 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression SUMA expression
    (2) expression -> . expression RESTA expression
    (3) expression -> . expression MULT expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMERO
    (6) expression -> . PARENT_IZQ expression PARENT_DER
    (7) expression -> . ID ASIGNAR expression
    (8) expression -> . expression AND expression
    (9) expression -> . expression OR expression

    NUMERO          shift and go to state 2
    PARENT_IZQ      shift and go to state 3
    ID              shift and go to state 4

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (1) expression -> expression . SUMA expression
    (2) expression -> expression . RESTA expression
    (3) expression -> expression . MULT expression
    (4) expression -> expression . DIV expression
    (8) expression -> expression . AND expression
    (9) expression -> expression . OR expression

    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIV             shift and go to state 8
    AND             shift and go to state 9
    OR              shift and go to state 10


state 2

    (5) expression -> NUMERO .

    SUMA            reduce using rule 5 (expression -> NUMERO .)
    RESTA           reduce using rule 5 (expression -> NUMERO .)
    MULT            reduce using rule 5 (expression -> NUMERO .)
    DIV             reduce using rule 5 (expression -> NUMERO .)
    AND             reduce using rule 5 (expression -> NUMERO .)
    OR              reduce using rule 5 (expression -> NUMERO .)
    $end            reduce using rule 5 (expression -> NUMERO .)
    PARENT_DER      reduce using rule 5 (expression -> NUMERO .)


state 3

    (6) expression -> PARENT_IZQ . expression PARENT_DER
    (1) expression -> . expression SUMA expression
    (2) expression -> . expression RESTA expression
    (3) expression -> . expression MULT expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMERO
    (6) expression -> . PARENT_IZQ expression PARENT_DER
    (7) expression -> . ID ASIGNAR expression
    (8) expression -> . expression AND expression
    (9) expression -> . expression OR expression

    NUMERO          shift and go to state 2
    PARENT_IZQ      shift and go to state 3
    ID              shift and go to state 4

    expression                     shift and go to state 11

state 4

    (7) expression -> ID . ASIGNAR expression

    ASIGNAR         shift and go to state 12


state 5

    (1) expression -> expression SUMA . expression
    (1) expression -> . expression SUMA expression
    (2) expression -> . expression RESTA expression
    (3) expression -> . expression MULT expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMERO
    (6) expression -> . PARENT_IZQ expression PARENT_DER
    (7) expression -> . ID ASIGNAR expression
    (8) expression -> . expression AND expression
    (9) expression -> . expression OR expression

    NUMERO          shift and go to state 2
    PARENT_IZQ      shift and go to state 3
    ID              shift and go to state 4

    expression                     shift and go to state 13

state 6

    (2) expression -> expression RESTA . expression
    (1) expression -> . expression SUMA expression
    (2) expression -> . expression RESTA expression
    (3) expression -> . expression MULT expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMERO
    (6) expression -> . PARENT_IZQ expression PARENT_DER
    (7) expression -> . ID ASIGNAR expression
    (8) expression -> . expression AND expression
    (9) expression -> . expression OR expression

    NUMERO          shift and go to state 2
    PARENT_IZQ      shift and go to state 3
    ID              shift and go to state 4

    expression                     shift and go to state 14

state 7

    (3) expression -> expression MULT . expression
    (1) expression -> . expression SUMA expression
    (2) expression -> . expression RESTA expression
    (3) expression -> . expression MULT expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMERO
    (6) expression -> . PARENT_IZQ expression PARENT_DER
    (7) expression -> . ID ASIGNAR expression
    (8) expression -> . expression AND expression
    (9) expression -> . expression OR expression

    NUMERO          shift and go to state 2
    PARENT_IZQ      shift and go to state 3
    ID              shift and go to state 4

    expression                     shift and go to state 15

state 8

    (4) expression -> expression DIV . expression
    (1) expression -> . expression SUMA expression
    (2) expression -> . expression RESTA expression
    (3) expression -> . expression MULT expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMERO
    (6) expression -> . PARENT_IZQ expression PARENT_DER
    (7) expression -> . ID ASIGNAR expression
    (8) expression -> . expression AND expression
    (9) expression -> . expression OR expression

    NUMERO          shift and go to state 2
    PARENT_IZQ      shift and go to state 3
    ID              shift and go to state 4

    expression                     shift and go to state 16

state 9

    (8) expression -> expression AND . expression
    (1) expression -> . expression SUMA expression
    (2) expression -> . expression RESTA expression
    (3) expression -> . expression MULT expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMERO
    (6) expression -> . PARENT_IZQ expression PARENT_DER
    (7) expression -> . ID ASIGNAR expression
    (8) expression -> . expression AND expression
    (9) expression -> . expression OR expression

    NUMERO          shift and go to state 2
    PARENT_IZQ      shift and go to state 3
    ID              shift and go to state 4

    expression                     shift and go to state 17

state 10

    (9) expression -> expression OR . expression
    (1) expression -> . expression SUMA expression
    (2) expression -> . expression RESTA expression
    (3) expression -> . expression MULT expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMERO
    (6) expression -> . PARENT_IZQ expression PARENT_DER
    (7) expression -> . ID ASIGNAR expression
    (8) expression -> . expression AND expression
    (9) expression -> . expression OR expression

    NUMERO          shift and go to state 2
    PARENT_IZQ      shift and go to state 3
    ID              shift and go to state 4

    expression                     shift and go to state 18

state 11

    (6) expression -> PARENT_IZQ expression . PARENT_DER
    (1) expression -> expression . SUMA expression
    (2) expression -> expression . RESTA expression
    (3) expression -> expression . MULT expression
    (4) expression -> expression . DIV expression
    (8) expression -> expression . AND expression
    (9) expression -> expression . OR expression

    PARENT_DER      shift and go to state 19
    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIV             shift and go to state 8
    AND             shift and go to state 9
    OR              shift and go to state 10


state 12

    (7) expression -> ID ASIGNAR . expression
    (1) expression -> . expression SUMA expression
    (2) expression -> . expression RESTA expression
    (3) expression -> . expression MULT expression
    (4) expression -> . expression DIV expression
    (5) expression -> . NUMERO
    (6) expression -> . PARENT_IZQ expression PARENT_DER
    (7) expression -> . ID ASIGNAR expression
    (8) expression -> . expression AND expression
    (9) expression -> . expression OR expression

    NUMERO          shift and go to state 2
    PARENT_IZQ      shift and go to state 3
    ID              shift and go to state 4

    expression                     shift and go to state 20

state 13

    (1) expression -> expression SUMA expression .
    (1) expression -> expression . SUMA expression
    (2) expression -> expression . RESTA expression
    (3) expression -> expression . MULT expression
    (4) expression -> expression . DIV expression
    (8) expression -> expression . AND expression
    (9) expression -> expression . OR expression

    SUMA            reduce using rule 1 (expression -> expression SUMA expression .)
    RESTA           reduce using rule 1 (expression -> expression SUMA expression .)
    $end            reduce using rule 1 (expression -> expression SUMA expression .)
    PARENT_DER      reduce using rule 1 (expression -> expression SUMA expression .)
    MULT            shift and go to state 7
    DIV             shift and go to state 8
    AND             shift and go to state 9
    OR              shift and go to state 10

  ! MULT            [ reduce using rule 1 (expression -> expression SUMA expression .) ]
  ! DIV             [ reduce using rule 1 (expression -> expression SUMA expression .) ]
  ! AND             [ reduce using rule 1 (expression -> expression SUMA expression .) ]
  ! OR              [ reduce using rule 1 (expression -> expression SUMA expression .) ]
  ! SUMA            [ shift and go to state 5 ]
  ! RESTA           [ shift and go to state 6 ]


state 14

    (2) expression -> expression RESTA expression .
    (1) expression -> expression . SUMA expression
    (2) expression -> expression . RESTA expression
    (3) expression -> expression . MULT expression
    (4) expression -> expression . DIV expression
    (8) expression -> expression . AND expression
    (9) expression -> expression . OR expression

    SUMA            reduce using rule 2 (expression -> expression RESTA expression .)
    RESTA           reduce using rule 2 (expression -> expression RESTA expression .)
    $end            reduce using rule 2 (expression -> expression RESTA expression .)
    PARENT_DER      reduce using rule 2 (expression -> expression RESTA expression .)
    MULT            shift and go to state 7
    DIV             shift and go to state 8
    AND             shift and go to state 9
    OR              shift and go to state 10

  ! MULT            [ reduce using rule 2 (expression -> expression RESTA expression .) ]
  ! DIV             [ reduce using rule 2 (expression -> expression RESTA expression .) ]
  ! AND             [ reduce using rule 2 (expression -> expression RESTA expression .) ]
  ! OR              [ reduce using rule 2 (expression -> expression RESTA expression .) ]
  ! SUMA            [ shift and go to state 5 ]
  ! RESTA           [ shift and go to state 6 ]


state 15

    (3) expression -> expression MULT expression .
    (1) expression -> expression . SUMA expression
    (2) expression -> expression . RESTA expression
    (3) expression -> expression . MULT expression
    (4) expression -> expression . DIV expression
    (8) expression -> expression . AND expression
    (9) expression -> expression . OR expression

    SUMA            reduce using rule 3 (expression -> expression MULT expression .)
    RESTA           reduce using rule 3 (expression -> expression MULT expression .)
    MULT            reduce using rule 3 (expression -> expression MULT expression .)
    DIV             reduce using rule 3 (expression -> expression MULT expression .)
    $end            reduce using rule 3 (expression -> expression MULT expression .)
    PARENT_DER      reduce using rule 3 (expression -> expression MULT expression .)
    AND             shift and go to state 9
    OR              shift and go to state 10

  ! AND             [ reduce using rule 3 (expression -> expression MULT expression .) ]
  ! OR              [ reduce using rule 3 (expression -> expression MULT expression .) ]
  ! SUMA            [ shift and go to state 5 ]
  ! RESTA           [ shift and go to state 6 ]
  ! MULT            [ shift and go to state 7 ]
  ! DIV             [ shift and go to state 8 ]


state 16

    (4) expression -> expression DIV expression .
    (1) expression -> expression . SUMA expression
    (2) expression -> expression . RESTA expression
    (3) expression -> expression . MULT expression
    (4) expression -> expression . DIV expression
    (8) expression -> expression . AND expression
    (9) expression -> expression . OR expression

    SUMA            reduce using rule 4 (expression -> expression DIV expression .)
    RESTA           reduce using rule 4 (expression -> expression DIV expression .)
    MULT            reduce using rule 4 (expression -> expression DIV expression .)
    DIV             reduce using rule 4 (expression -> expression DIV expression .)
    $end            reduce using rule 4 (expression -> expression DIV expression .)
    PARENT_DER      reduce using rule 4 (expression -> expression DIV expression .)
    AND             shift and go to state 9
    OR              shift and go to state 10

  ! AND             [ reduce using rule 4 (expression -> expression DIV expression .) ]
  ! OR              [ reduce using rule 4 (expression -> expression DIV expression .) ]
  ! SUMA            [ shift and go to state 5 ]
  ! RESTA           [ shift and go to state 6 ]
  ! MULT            [ shift and go to state 7 ]
  ! DIV             [ shift and go to state 8 ]


state 17

    (8) expression -> expression AND expression .
    (1) expression -> expression . SUMA expression
    (2) expression -> expression . RESTA expression
    (3) expression -> expression . MULT expression
    (4) expression -> expression . DIV expression
    (8) expression -> expression . AND expression
    (9) expression -> expression . OR expression

    SUMA            reduce using rule 8 (expression -> expression AND expression .)
    RESTA           reduce using rule 8 (expression -> expression AND expression .)
    MULT            reduce using rule 8 (expression -> expression AND expression .)
    DIV             reduce using rule 8 (expression -> expression AND expression .)
    AND             reduce using rule 8 (expression -> expression AND expression .)
    OR              reduce using rule 8 (expression -> expression AND expression .)
    $end            reduce using rule 8 (expression -> expression AND expression .)
    PARENT_DER      reduce using rule 8 (expression -> expression AND expression .)

  ! SUMA            [ shift and go to state 5 ]
  ! RESTA           [ shift and go to state 6 ]
  ! MULT            [ shift and go to state 7 ]
  ! DIV             [ shift and go to state 8 ]
  ! AND             [ shift and go to state 9 ]
  ! OR              [ shift and go to state 10 ]


state 18

    (9) expression -> expression OR expression .
    (1) expression -> expression . SUMA expression
    (2) expression -> expression . RESTA expression
    (3) expression -> expression . MULT expression
    (4) expression -> expression . DIV expression
    (8) expression -> expression . AND expression
    (9) expression -> expression . OR expression

    SUMA            reduce using rule 9 (expression -> expression OR expression .)
    RESTA           reduce using rule 9 (expression -> expression OR expression .)
    MULT            reduce using rule 9 (expression -> expression OR expression .)
    DIV             reduce using rule 9 (expression -> expression OR expression .)
    AND             reduce using rule 9 (expression -> expression OR expression .)
    OR              reduce using rule 9 (expression -> expression OR expression .)
    $end            reduce using rule 9 (expression -> expression OR expression .)
    PARENT_DER      reduce using rule 9 (expression -> expression OR expression .)

  ! SUMA            [ shift and go to state 5 ]
  ! RESTA           [ shift and go to state 6 ]
  ! MULT            [ shift and go to state 7 ]
  ! DIV             [ shift and go to state 8 ]
  ! AND             [ shift and go to state 9 ]
  ! OR              [ shift and go to state 10 ]


state 19

    (6) expression -> PARENT_IZQ expression PARENT_DER .

    SUMA            reduce using rule 6 (expression -> PARENT_IZQ expression PARENT_DER .)
    RESTA           reduce using rule 6 (expression -> PARENT_IZQ expression PARENT_DER .)
    MULT            reduce using rule 6 (expression -> PARENT_IZQ expression PARENT_DER .)
    DIV             reduce using rule 6 (expression -> PARENT_IZQ expression PARENT_DER .)
    AND             reduce using rule 6 (expression -> PARENT_IZQ expression PARENT_DER .)
    OR              reduce using rule 6 (expression -> PARENT_IZQ expression PARENT_DER .)
    $end            reduce using rule 6 (expression -> PARENT_IZQ expression PARENT_DER .)
    PARENT_DER      reduce using rule 6 (expression -> PARENT_IZQ expression PARENT_DER .)


state 20

    (7) expression -> ID ASIGNAR expression .
    (1) expression -> expression . SUMA expression
    (2) expression -> expression . RESTA expression
    (3) expression -> expression . MULT expression
    (4) expression -> expression . DIV expression
    (8) expression -> expression . AND expression
    (9) expression -> expression . OR expression

    $end            reduce using rule 7 (expression -> ID ASIGNAR expression .)
    PARENT_DER      reduce using rule 7 (expression -> ID ASIGNAR expression .)
    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIV             shift and go to state 8
    AND             shift and go to state 9
    OR              shift and go to state 10

  ! SUMA            [ reduce using rule 7 (expression -> ID ASIGNAR expression .) ]
  ! RESTA           [ reduce using rule 7 (expression -> ID ASIGNAR expression .) ]
  ! MULT            [ reduce using rule 7 (expression -> ID ASIGNAR expression .) ]
  ! DIV             [ reduce using rule 7 (expression -> ID ASIGNAR expression .) ]
  ! AND             [ reduce using rule 7 (expression -> ID ASIGNAR expression .) ]
  ! OR              [ reduce using rule 7 (expression -> ID ASIGNAR expression .) ]

